name: Build and push to GAR

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup JDK 19
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '19'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Setup pack
        uses: buildpacks/github-actions/setup-pack@v5.0.0
      - name: Build with Gradle chr

        run: ./gradlew build
      - name: Build Docker image with pack
        run: |
          pack build tmp --builder gcr.io/buildpacks/builder --env GOOGLE_RUNTIME_VERSION=19
        env:
      # TODO: evaluate if we need these
          PACK_NO_COLOR: true  # Optional: disable color output
          DOCKER_BUILDKIT: 1   # Optional: enable BuildKit for better performance

      - name: Google auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.AUTOMATION_SA_KEY_JSON }}

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: europe-west1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.AUTOMATION_SA_KEY_JSON }}

      - name: Build docker image name
        run: |
          PROJECT_NAME=$( ./gradlew properties |  grep ^name: | awk '{print $2}' )
          PROJECT_VERSION=$( ./gradlew properties |  grep ^version: | awk '{print $2}' )
          IMAGE_NAME=$DOCKER_IMAGE_PREFIX/$PROJECT_NAME:$PROJECT_VERSION
          echo $IMAGE_NAME
          echo "IMAGE_NAME=$DOCKER_IMAGE_PREFIX/$PROJECT_NAME:$PROJECT_VERSION" >> $GITHUB_ENV
        env:
          DOCKER_IMAGE_PREFIX: ${{ vars.DOCKER_IMAGE_PATH_PREFIX }}
      - name: Push image to GAR
        run: |
          docker tag tmp $IMAGE_NAME
          docker push $IMAGE_NAME

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Google auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.AUTOMATION_SA_KEY_JSON }}
      - uses: azure/setup-kubectl@v4
      - name: Get GKE creds
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: 'simple-autopilot-private-cluster'
          location: 'europe-west1'
          credentials: ${{ secrets.AUTOMATION_SA_KEY_JSON }}
      - name: Apply deployment
        env:
          BASTION_IP: ${{ secrets.SSH_BASTION_HOST_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.LPT_SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/lpt_priv_key
          chmod 600/tmp/lpt_priv_key
          ssh -D 1080 -qfN -i /tmp/lpt_priv_key lpt@$BASTION_IP 
          export HTTPS_PROXY=socks5://localhost:1080
          kubectl apply -f src/k8s/deployment.yaml
